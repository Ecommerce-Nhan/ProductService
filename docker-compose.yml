name: product-service
services:
  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.0.1
  #   container_name: Elastic_Search
  #   environment:
  #     - node.name=elasticsearch
  #     - cluster.name=datasearch
  #     - bootstrap.memory_lock=true
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #     - cluster.initial_master_nodes=elasticsearch
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   ports:
  #     - "9200:9200"
  #   # volumes:
  #   #   - D:\Docker\Data\Elasticsearch:/usr/share/elasticsearch/data
  # kibana:
  #   image: docker.elastic.co/kibana/kibana:7.0.1
  #   container_name: Kibana
  #   ports:
  #     - "5601:5601"
  api:
    image: product-service-api:latest
    container_name: Api
    build:
        context: .
        dockerfile: Dockerfile
        args:
          GITHUB_USERNAME: nhanne
          GITHUB_TOKEN: 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
    ports:
      - "8080:80"
      - "8091:443"
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
  postgres:
    image: postgres:latest
    container_name: Database
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: productDB
    ports:
      - "5435:5432"
    # volumes:
    #   - D:\Docker\Data\Postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5